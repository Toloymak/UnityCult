@page "/"
@using Models.Models
@using Services.Services
@using Models.Models.Player
@inject IWorldGenerationService WorldGenerationService;
@inject IProcedureService ProcedureService;
@inject GameStateModel GameStateModel;
@inject IInfoProvider InfoProvider;


<MudGrid>
    <MudItem xs="3">
        <MudPaper>
            <MudItem xs="3">
                Game time:
            </MudItem>
            <MudItem xs="3">
                @_gameModel.TimeModel.GameTime.ToString(@"hh\:mm\:ss")
            </MudItem>
        </MudPaper>
    </MudItem>
    <MudItem xs="6">
        <MudPaper>
            <MudItem>
                Resources:
            </MudItem>

            @foreach (var resource in InfoProvider.GetResources(_playerStorageModel))
            {
                <MudItem>
                    <MudElement Style="display: inline-block; width: 20%;">@resource.Key</MudElement>
                    <MudElement>@resource.Value</MudElement>
                </MudItem>
            }
        </MudPaper>
    </MudItem>

</MudGrid>

@code
{
    private GameStateModel _gameModel;

    private PlayerStorageModel _playerStorageModel;

    [Parameter]
    public double Interval { get; set; } = 1;
    
    protected override async void OnInitialized()
    {
        _gameModel = GameStateModel;
        _playerStorageModel = _gameModel?.Players[_gameModel.PlayerId];

        StartUpdateUiTask();

        await base.OnInitializedAsync();
    }

    private void StartUpdateUiTask()
    {
        Task.Run(async () =>
        {
            while (true)
            {
                await Task.Delay(1000);
                await InvokeAsync(StateHasChanged);
            }
        });
    }
}
